"""
Django settings for post project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-wiw58kww-79z%wkg#1vw7cxqssp$$5^5_^1an4&*dvd-r-i0ft'

#recapta
RECAPTCHA_PUBLIC_KEY = '6LdvWlMhAAAAAPlaPB5sbzlXD0LfW6NUYzuxmNpk'
RECAPTCHA_PRIVATE_KEY = '6LdvWlMhAAAAAHdv2jiHjxNR5OnXOLNjmHDh9szh'
#recapta ends here

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
#DEBUG = True


ALLOWED_HOSTS = ['www.bechatronics.pythonanywhere.com','bechatronics.pythonanywhere.com','www.benchatronics.com','benchatronics.com']

CKEDITOR_UPLOAD_PATH = os.path.join(BASE_DIR, 'static/images/uploads')

SITE_ID = 1




# Application definition

INSTALLED_APPS = [
    'captcha',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #########################
    'ckeditor',
    'ckeditor_uploader',
    'django_social_share',
    ##################
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.twitter',
    'allauth.socialaccount.providers.google',
    'django_comments_xtd',
    'django_comments',
    'posts',
    'django_user_agents',
    'crispy_forms',
    'rest_framework',
    'django_summernote',
    'taggit',
    'preventconcurrentlogins',




]


APPEND_SLASH = True

#summer notes
X_FRAME_OPTIONS = 'SAMEORIGIN'

# This Indicates the frontend framework django crispy forms use
CRISPY_TEMPLATE_PACK = 'bootstrap4'

#comments app
COMMENTS_APP = 'django_comments_xtd'


#  To help obfuscating comments before they are sent for confirmation.
COMMENTS_XTD_SALT = (b"Timendi causa est nescire. "
                     b"Aequam memento rebus in arduis servare mentem.")

# Source mail address used for notifications.
COMMENTS_XTD_FROM_EMAIL = "benchatronics.com@gmail.com"

# Disable sending email to non-logged users commenting
COMMENTS_XTD_CONFIRM_EMAIL = False

# Contact mail address to show in messages.
COMMENTS_XTD_CONTACT_EMAIL = "benchatronics.com@gmail.com"

#manageers for comments
MANAGERS = (
    ('Benny Jessie', 'cbnlinkschimexbn@gmail.com'),
)
# Comment nesting level.
COMMENTS_XTD_MAX_THREAD_LEVEL = 2  # default is 0

COMMENTS_XTD_LIST_ORDER = ('-thread_id', 'order')  # default is ('thread_id', 'order')

#Gmail config
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = "587"
EMAIL_HOST_USER = "bechatronics@gmail.com"
EMAIL_HOST_PASSWORD = "laxyhlvtdopzpuuu"
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = "Helpdesk<benchatronics.com@gmail.com>"
RECIPIENT_ADDRESS = 'benchatronics.com@gmail.com'

#namechameap email config
#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

#DEFAULT_FROM_EMAIL = "Helpdesk<contact@benchatronics.com>"
#EMAIL_USE_SSl = False
#EMAIL_USE_TLS = True
#EMAIL_HOST_PASSWORD = 'BennY6385@'
#EMAIL_HOST_USER = 'contact@benchatronics.com'
#EMAIL_HOST = 'mail.privateemail.com'
#EMAIL_PORT = 587
#RECIPIENT_ADDRESS = 'benchatronics.com@gmail.com'

#ckeditor configurations

CKEDITOR_CONFIGS = {
    'default': {
        'removePlugins':'stylesheetparser',
        'allowedContent': True,
        'skin': 'moono',
        #'skin': 'office2013',
        'toolbar_Basic': [
            ['Source', '-', 'Bold', 'Italic','Youtube',]
        ],
        'toolbar_YourCustomToolbarConfig': [
            {'name': 'document', 'items': ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates']},
            {'name': 'clipboard', 'items': ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']},
            {'name': 'editing', 'items': ['Find', 'Replace', '-', 'SelectAll']},
            {'name': 'forms',
             'items': ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton',
                       'HiddenField']},
            '/',
            {'name': 'basicstyles',
             'items': ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat']},
            {'name': 'paragraph',
             'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-',
                       'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl',
                       'Language']},
            {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
            {'name': 'insert',
             'items': ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe']},
            '/',
            {'name': 'styles', 'items': ['Styles', 'Format', 'Font', 'FontSize']},
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            {'name': 'tools', 'items': ['Maximize', 'ShowBlocks']},
            {'name': 'about', 'items': ['About']},
            '/',  # put this to force next toolbar on new line
            {'name': 'yourcustomtools', 'items': [
                # put the name of your editor.ui.addButton here
                'Preview',
                'Maximize',
                'CodeSnippet',
                'Mathjax',
                'Templates',
                'Uicolor',
                'Menubutton',
                'iframedialog',
                'Image',
                #'ShowBlocks',
                'Embed',
                #'Youtube',



            ]},
        ],
        'toolbar': 'YourCustomToolbarConfig',  # put selected toolbar config here
        # 'toolbarGroups': [{ 'name': 'document', 'groups': [ 'mode', 'document', 'doctools' ] }],
        # 'height': 291,
        # 'width': '100%',
        # 'filebrowserWindowHeight': 725,
        # 'filebrowserWindowWidth': 940,
        # 'toolbarCanCollapse': True,
        'mathJaxLib': '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML',

        #'mathJaxLib': '//cdn.mathjax.org/mathjax/2.2-latest/MathJax.js?config=TeX-AMS_HTML',
        'tabSpaces': 4,
        'extraPlugins': ','.join([
            'uploadimage', # the upload image feature
            # your extra plugins here
            'div',
            'autolink',
            'autoembed',
            'embedsemantic',
            'autogrow',
            #'devtools',
            'widget',
            'lineutils',
            'clipboard',
            'dialog',
            'dialogui',
            'elementspath',
            'codesnippet',
            'mathjax',
            'templates',
            'uicolor',
            'iframedialog',
            'menubutton',
            'image2',
            'embed',
            #'youtube',
        ]),
    },
    'special':{
        'toolbar':'Special',
        'toolbar_Special':[
            ['Bold', 'Italic', 'Underline', 'JustifyLeft','JustifyCenter', 'JustifyRight', 'JustifyBlock',],
            ],
        'toolbar_YourCustomToolbarConfig': [
              {'name': 'yourcustomtools', 'items': [

                'CodeSnippet',
                'Mathjax',
                'Bold',
                'Italic',
                'Underline',
                'JustifyLeft',
                'JustifyCenter',
                'JustifyRight',
                'JustifyBlock',
                'TextColor',
                'BGColor',
                'Format',
                'Font',

            ]},
            ],

         'toolbar': 'YourCustomToolbarConfig',  # put selected toolbar config here
        # 'toolbarGroups': [{ 'name': 'document', 'groups': [ 'mode', 'document', 'doctools' ] }],
        # 'height': 291,
        # 'width': '100%',
        # 'filebrowserWindowHeight': 725,
        # 'filebrowserWindowWidth': 940,
        # 'toolbarCanCollapse': True,
        'mathJaxLib': '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML',

        #'mathJaxLib': '//cdn.mathjax.org/mathjax/2.2-latest/MathJax.js?config=TeX-AMS_HTML',
        'tabSpaces': 4,
        'extraPlugins': ','.join([
            'uploadimage', # the upload image feature
            # your extra plugins here
            'div',
            'codesnippet',
            'mathjax',


        ]),
        },

}

#ckeditor configurations end here

MIDDLEWARE = [

    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
    'preventconcurrentlogins.middleware.PreventConcurrentLoginsMiddleware',

]



ROOT_URLCONF = 'post.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS':[os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',


            ],
        },
    },
]

WSGI_APPLICATION = 'post.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default1': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'bechatronics$benny',
        'USER': 'bechatronics',
        'PASSWORD': 'BennY6385@',
        'HOST': 'bechatronics.mysql.pythonanywhere-services.com',
        'PORT':'3306',
    },
    'default2': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'benny',
        'USER': 'bct',
        'PASSWORD': 'BennY6385@',
        'HOST': 'localhost',
        'PORT':'3306',
    }

}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/


#whitenoise caching behaviour
#STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"


#no caching behaviour enable this white noise
STATICFILES_STORAGE = "whitenoise.storage.CompressedStaticFilesStorage"

 #whitenoise troubleshoot
#STATICFILES_STORAGE = "django.contrib.staticfiles.storage.ManifestStaticFilesStorage"

STATIC_URL = '/static/'
STATIC_ROOT  = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)
#STATICFILES_DIRS = [BASE_DIR / 'static']

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
MEDIA_ROOT = os.path.join(BASE_DIR, 'static/images')
#MEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')
MEDIA_URL = '/images/'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',

]

PREPEND_WWW = True


COMMENTS_XTD_APP_MODEL_OPTIONS = {
    'posts.article': {
        'allow_flagging': True,
        'allow_feedback': True,
        'show_feedback': True,
    },

    'posts.blog': {
        'allow_flagging': True,
        'allow_feedback': True,
        'show_feedback': True,
    },

    'posts.easy_ball': {
        'allow_flagging': True,
        'allow_feedback': True,
        'show_feedback': True,
    }
}
